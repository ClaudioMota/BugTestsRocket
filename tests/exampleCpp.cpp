#include "test.h"
#include "exampleCpp.h"

// This header file was generated by BugTestsRocket test framework
// It must be included after test.h and any eventual required typedefs
#ifdef BUG_TESTS_ROCKET_TEST_HEADER
#ifdef __cplusplus
extern "C"{
#endif
int 🐛getRandomInput🚀();
void*_mocked_getRandomInput = reinterpret_cast<void*>(🐛getRandomInput🚀);
void 🐛_ZN7MyClass15internalProcessEv🚀(void*);
void*_mocked__ZN7MyClass15internalProcessEv = reinterpret_cast<void*>(🐛_ZN7MyClass15internalProcessEv🚀);
int getRandomInput(){ return reinterpret_cast<int (*)()>(_mocked_getRandomInput)(); }
void _ZN7MyClass15internalProcessEv(void* a0){ return reinterpret_cast<void (*)(void*)>(_mocked__ZN7MyClass15internalProcessEv)(a0); }
FunctionMock _mocks[] = {
  {true, (int)0, reinterpret_cast<void**>(&_mocked_getRandomInput), "getRandomInput"},
  {true, (int)0, (void*)&_mocked__ZN7MyClass15internalProcessEv, "_ZN7MyClass15internalProcessEv"},
  {false, (int)0, (void*)0, reinterpret_cast<const char*>("")}
};
#ifdef __cplusplus
}
#endif
#endif

void simulateProcess(MyClass* myClass)
{
  myClass->internalValue *= 10;
}

🐛
context("MyClass::getProcessedValue")
{
  test("processes the value and retrieves it")
  {
    MyClass instance(5);
    assert(instance.getProcessedValue() == 25);
  }

  test("Calls the internal processing function")
  {
    mock(_ZN7MyClass15internalProcessEv, simulateProcess);
    MyClass instance(5);
    assert(instance.getProcessedValue() == 50);
  }
}
🚀